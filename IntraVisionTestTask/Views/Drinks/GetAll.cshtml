@model DrinksCoins

<div class="row mt-3 mb-2">
    @{
        Users? user = HttpContextAccessor.HttpContext.Session.Get<Users>("user");
        if(user != null && user.Role == RoleEnum.Admin)
        {
            <p><a class="btn btn-success w-100" asp-controller="Drinks" asp-action="Add">Добавить</a></p>
        }

        <div class="container">
            <div class="row">
                @{
                    foreach (var coin in Model.Coins)
                    {
                        <div class="col">
                        @{
                            int coinDenomination = (int)coin.Denomination;
                            if (coin.IsBlocked == true)
                            {
                                <p><a class="btn btn-danger disabled w-100">Монета: @coinDenomination. Количество: @coin.Amount</a></p>
                            }
                            else
                            {
                                <p><a name="depositAmount" id="@coinDenomination" class="btn btn-warning w-100">Монета: @coinDenomination. Количество: @coin.Amount</a></p>
                            }
                        }
                        </div>
                    }
                }
                <a>Текущий баланс:</a>
                <a name="depositAmountText"></a>
            </div>
        </div>

        foreach (var drink in Model.Drinks)
        {
            <div class="col-lg-5 m-4 shadow mb-5">
                <img class="img-fluid rounded mx-auto d-block" width="200" height="300" src="@drink.Img" alt="Картинка отсутствует" />
                <div class="ml-4 pr-4 mt-2 text-dark" name="main">
                    <p>Название: @drink.Name</p>
                    <p>Цена: @drink.Price</p>
                    <p>Количество: @drink.Amount</p>

                    @{
                        if (user != null)
                        {
                            if (user.Role == RoleEnum.User)
                            {
                                if(drink.Amount > 0)
                                {
                                    <p name="pBuyDrink"><a name="buyDrink" class="btn btn-outline-warning w-100" data="@drink.Price" id="@drink.Id">Купить</a></p>
                                }
                                else
                                {
                                    <p><a class="btn btn-warning w-100 disabled">Напиток закончился</a></p>
                                }

                            }
                            if (user.Role == RoleEnum.Admin)
                            {
                                <div class="m-3" name="adminFunctions">
                                    <p><a class="btn btn-warning w-100" asp-controller="Drinks" asp-action="Update" asp-route-idDrink="@drink.Id">Изменить</a></p>
                                    <p name="buttonDel" id="@drink.Id"><a class="btn btn-danger w-100">Удалить</a></p>
                                </div>
                            }
                        }
                        else
                        {
                            <p><a class="btn btn-warning w-100 disabled">Нужно авторизироваться</a></p>
                        }
                    }
                </div>
            </div>
        }
    }
</div>

@section Scripts{
    <script>

        $('a[name="depositAmountText"]').text(getBalance())

        //функции присвоения баланса в хранилище сессии
        function getBalance(){
            let balance = sessionStorage.getItem("balance");
            return Number(balance);
        }

        //функция добавление монет к балансу и количеству монет
        $('a[name="depositAmount"]').click(function () {

            let balance = getBalance();
            let sum = Number($(this).attr('id'));
            let newBalance = balance + sum;

            sessionStorage.setItem("balance", newBalance);

            $('a[name="depositAmountText"]').text(getBalance());
        });

        //функция добавление данных юзера в json файл для отправки на сервер
        function getUserBuyDrinkJson(id) {
            let UserBuyDrink = {
                IdDrink: id,
                Balance: getBalance(),
            }
            return UserBuyDrink;
        }

        $('p[name="pBuyDrink"]').click(function (){
            let price = $(this).children('a[name="buyDrink"]').attr('data');
            let balance = getBalance();
            if(price > balance){
                alert("Не достаточно монет!");
            }
            else{
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("BuyDrinkMethod", "BuyDrink")',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(getUserBuyDrinkJson($(this).children('a[name="buyDrink"]').attr('id'))),
                    dataType: "json",
                    success: BuyProductSuccess(price),
                })
            }
        })

        //функция изменения баланса после покупки и обновления страницы
        function BuyProductSuccess(price){
            balance = getBalance();
            newBalance = balance - price;
            sessionStorage.setItem("balance", newBalance);
            setTimeout(reloadPage, 1000);
        }

        //обновление страницы
        function reloadPage(){
            location.reload();
        }

        //запрос на удаление напитка
        $('div[name="main"]').children('div[name="adminFunctions"]').children('p[name="buttonDel"]').click(function () {

            $.ajax({
                type: "DELETE",
                url: '@Url.Action("Delete", "Drinks")',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify($(this).attr('id')),
                dataType: "json",
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("Authorization", "Bearer " + sessionStorage.getItem("token"));
                }
            })
        })

        //мои жалкие попытки реализовать запросы к методас с атрибутом Authorize

        //$('div[name="main"]').children('div[name="adminFunctions"]').click(function () {

        //    $.ajax({
        //        type: "GET",
        //        url: '@Url.Action("Update", "Drinks")',
        //        contentType: "application/json; charset=utf-8",
        //        data: JSON.stringify($(this).attr('id')),
        //        dataType: "json",
        //        beforeSend: function (xhr) {
        //            xhr.setRequestHeader("Authorization", 'Bearer ');
        //        }
        //    })
        //})
    </script>
}